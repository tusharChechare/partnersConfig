name: Update JSON Files from Webhook

on:
  repository_dispatch:
    types: [update_config_json]

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Switch or create config-deployment branch
        run: |
          git fetch origin
          git checkout config-deployment || git checkout -b config-deployment

      - name: Process restaurant configs by status
        run: |
          echo '${{ toJson(github.event.client_payload.config) }}' > all.json
          mkdir -p restaurants

          jq -c '.[]' all.json | while read -r item; do
            id=$(echo "$item" | jq -r '."restaurantId" // ."Restaurant ID"' | tr -cd '[:alnum:]_-')
            status=$(echo "$item" | jq -r '."status" // ."Status"' | tr '[:upper:]' '[:lower:]' | xargs)
            file="restaurants/${id}.json"

            if [[ "$status" == "active" ]]; then
              echo "$item" > "$file"
              echo "‚úÖ Created/Updated $file"
            else
              if [[ -f "$file" ]]; then
                rm "$file"
                echo "üóëÔ∏è Deleted $file (status: $status)"
              else
                echo "‚ÑπÔ∏è  No existing file for $id to delete (status: $status)"
              fi
            fi
          done

          rm all.json

      - name: Commit and push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add restaurants/
          git diff --cached --quiet || git commit -m "Sync restaurant JSONs based on status"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin config-deployment
